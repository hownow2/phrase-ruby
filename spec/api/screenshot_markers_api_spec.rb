require 'spec_helper'
require 'json'

# Unit tests for Phrase::ScreenshotMarkersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ScreenshotMarkersApi' do
  before do
    # run before each test
    @api_instance = Phrase::ScreenshotMarkersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ScreenshotMarkersApi' do
    it 'should create an instance of ScreenshotMarkersApi' do
      expect(@api_instance).to be_instance_of(Phrase::ScreenshotMarkersApi)
    end
  end

  # unit tests for screenshot_marker_create
  # Create a screenshot marker
  # Create a new screenshot marker.
  # @param project_id Project ID
  # @param screenshot_id Screenshot ID
  # @param screenshot_marker_create 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [nil]
  describe 'screenshot_marker_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for screenshot_marker_delete
  # Delete a screenshot marker
  # Delete an existing screenshot marker.
  # @param project_id Project ID
  # @param screenshot_id Screenshot ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [nil]
  describe 'screenshot_marker_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for screenshot_marker_show
  # Get a single screenshot marker
  # Get details on a single screenshot marker for a given project.
  # @param project_id Project ID
  # @param screenshot_id Screenshot ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Object]
  describe 'screenshot_marker_show test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for screenshot_marker_update
  # Update a screenshot marker
  # Update an existing screenshot marker.
  # @param project_id Project ID
  # @param screenshot_id Screenshot ID
  # @param screenshot_marker_update 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [ScreenshotMarker]
  describe 'screenshot_marker_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for screenshot_markers_list
  # List screenshot markers
  # List all screenshot markers for the given project.
  # @param project_id Project ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :per_page allows you to specify a page size up to 100 items, 10 by default
  # @return [Array<Object>]
  describe 'screenshot_markers_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
